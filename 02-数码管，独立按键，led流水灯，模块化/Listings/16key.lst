C51 COMPILER V9.60.7.0   16KEY                                                             02/16/2024 16:23:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE 16KEY
OBJECT MODULE PLACED IN .\Objects\16key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 16key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\16k
                    -ey.lst) OBJECT(.\Objects\16key.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "shuma.h"
   3          #include "typedef.h"
   4          
   5          //矩阵键盘用此声明
   6          //IN给零，OUT为0即为按下
   7          sbit KEY_OUT_1 = P3^0;//0
   8          sbit KEY_OUT_2 = P3^1;//1
   9          sbit KEY_OUT_3 = P3^2;//2
  10          sbit KEY_OUT_4 = P3^3;//3
  11          sbit KEY_IN_4 = P3^4;//3
  12          sbit KEY_IN_3 = P3^5;//2
  13          sbit KEY_IN_2 = P4^2;//1
  14          sbit KEY_IN_1 = P4^4;//0
  15          
  16          //矩阵键盘含义数组
  17          u8 keymap[4][4] ={
  18                  {0, 1, 2, 3 },
  19                  {4, 5, 6, 7 },
  20                  {8, 9, 10,11},
  21                  {12,13,14,15}
  22          };
  23          //矩阵键盘控制程序
  24          void keyaction16(u8 a,u8 b)
  25          {
  26   1              shuma(1,keymap[a][b]);
  27   1      }
  28          
  29          //矩阵键盘扫描函数(在中断调用)
  30          void keyscan16()
  31          {
  32   1              u8 i;
  33   1              static u8 keyout = 0;
  34   1              //2*8ms延时判断
  35   1              static u8 keytmp[4][4] = {{0xff,0xff,0xff,0xff},{0xff,0xff,0xff,0xff},
  36   1                                                              {0xff,0xff,0xff,0xff},{0xff,0xff,0xff,0xff}};
  37   1              //防重复对比数组
  38   1              static u8 keybefore[4][4] = {{1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}};
  39   1              static u8 keynow[4][4]    = {{1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}};
  40   1                      
  41   1              switch(keyout)
  42   1              {
  43   2                      case 0: KEY_OUT_1 = 0; KEY_OUT_4 = 1; break;
  44   2                      case 1: KEY_OUT_2 = 0; KEY_OUT_1 = 1; break;
  45   2                      case 2: KEY_OUT_3 = 0; KEY_OUT_2 = 1; break;
  46   2                      case 3: KEY_OUT_4 = 0; KEY_OUT_3 = 1; break;
  47   2                      default : break;
  48   2              }
  49   1              
  50   1              keytmp[keyout][0] = (keytmp[keyout][0]<<1)| KEY_IN_1;
  51   1              keytmp[keyout][1] = (keytmp[keyout][1]<<1)| KEY_IN_2;
  52   1              keytmp[keyout][2] = (keytmp[keyout][2]<<1)| KEY_IN_3;
  53   1              keytmp[keyout][3] = (keytmp[keyout][3]<<1)| KEY_IN_4;
  54   1              
C51 COMPILER V9.60.7.0   16KEY                                                             02/16/2024 16:23:10 PAGE 2   

  55   1              for(i=0;i<4;i++)
  56   1              {
  57   2                      if(keytmp[keyout][i] == 0xff)
  58   2                      {
  59   3                              keynow[keyout][i] = 1;
  60   3                      }
  61   2                      else if(keytmp[keyout][i] == 0x00)
  62   2                      {
  63   3                              keynow[keyout][i] = 0;
  64   3                      }
  65   2                      else {}
  66   2              }
  67   1              for(i=0;i<4;i++)
  68   1              {
  69   2                      //短按控制
  70   2                      if(keynow[keyout][i]!=keybefore[keyout][i])
  71   2                      {
  72   3                              if(keynow[keyout][i]==0)
  73   3                              {
  74   4                                      keyaction16(keyout,i);
  75   4                              }
  76   3                              keybefore[keyout][i]=keynow[keyout][i];
  77   3                      }
  78   2              }
  79   1              
  80   1              if(keyout == 3) keyout = 0;
  81   1              else keyout++;
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
